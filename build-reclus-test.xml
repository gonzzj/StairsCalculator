<project name="Enesca" default="deploy" basedir=".">

    <target name="deploy" description="Deploys the current working copy to a remote host using FileSync">
        <!-- Default hostname is empty, must be passed from the command line -->
        <property name="hostname" value="polarbeardevelopment.com" override="false" />

        <!-- Set default LISTONLY to false -->
        <!-- <property name="listonly" value="false" override="true" /> -->
        <property name="hostfile" value="build/config/hosts/enesca.test.properties" />

        <!-- Check for specific host/env file, if not fail! -->
        <available file="${hostfile}" property="hostfilefound" value="true"/>

        <fail unless="hostfilefound" message="Missing host configuration file (${hostfile})!" />

        <!-- Host file exists so loading... -->
        <property file="${hostfile}" />

        <!-- Get timestamp -->
        <tstamp />

        <!-- Set default VERBOSE flag to TRUE -->
        <if>
            <not>
                <isset property="sync.verbose" />
            </not>
            <then>
                <property name="sync.verbose" value="true" override="true" />
                <echo message="The value of sync.verbose has been set to true" />
            </then>
        </if>

        <!-- Set default DELETE flag to FALSE -->
        <if>
            <not>
                <isset property="sync.delete" />
            </not>
            <then>
                <property name="sync.delete" value="false" override="true" />
                <echo message="The value of sync.delete has been set to false" />
            </then>
        </if>

        <!-- Get auth info, password will be always required -->
        <!-- <property name="sync.remote.auth" value="${sync.remote.user}@${sync.remote.host}" /> -->
        <property name="sync.remote.auth" value="${sync.remote.user}@${sync.remote.host}" />

        <composer command="install" composer="/usr/local/bin/composer">
            <arg value="--optimize-autoloader" />
        </composer>

        <!-- Perform Sync -->
        <!-- See: http://fedecarg.com/wiki/filesynctask -->
        <taskdef name="sync" classname="phing.tasks.ext.FileSyncTask" />
        <sync
                sourcedir="${sync.source.projectdir}"
                destinationdir="${sync.remote.auth}:${sync.destination.projectdir}"
                excludefile="${sync.exclude.file}"
                delete="${sync.delete}"
                verbose="${sync.verbose}" />

    </target>
</project>
